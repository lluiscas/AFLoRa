[General]
network = LoRaNetAnalysis
rng-class = "cMersenneTwister"
record-eventlog = false

# network features
**.result-recording-modes = default
**.numberOfGateways = 1
**.loRaGW[0].numUdpApps = 1
**.loRaGW[0].packetForwarder.localPort = 2000
**.loRaGW[0].packetForwarder.destPort = 1000
**.loRaGW[0].packetForwarder.destAddresses = "networkServer"
**.loRaGW[0].packetForwarder.indexNumber = 0

**.loRaGW[1].numUdpApps = 1
**.loRaGW[1].packetForwarder.localPort = 2000
**.loRaGW[1].packetForwarder.destPort = 1000
**.loRaGW[1].packetForwarder.destAddresses = "networkServer"
**.loRaGW[1].packetForwarder.indexNumber = 1

**.networkServer.numUdpApps = 1
**.networkServer.**.evaluateADRinServer = false
**.networkServer.udpApp[0].typename = "NetworkServerApp"
**.networkServer.udpApp[0].destAddresses = "loRaGW[0]"
**.networkServer.udpApp[0].destPort = 2000
**.networkServer.udpApp[0].localPort = 1000
**.networkServer.udpApp[0].adrMethod = ${"avg"}

**.numberOfNodes = 10
**.numberOfPacketsToSend = 0 #0 means infinite number of packets
sim-time-limit = 7d
warmup-period = 1d
simtime-resolution = -11

**.timeToFirstPacket = exponential(500s)
**.timeToNextPacket = exponential(500s)
**.alohaChannelModel = false

#nodes features
**.loRaNodes[*].**.initFromDisplayString = false
**.loRaNodes[*].**.evaluateADRinNode = false
**.loRaNodes[*].**.initialLoRaSF = intuniform(7,12)
**.loRaNodes[*].**.initialLoRaBW = 125 kHz
**.loRaNodes[*].**.initialLoRaCR = 4
**.loRaNodes[*].**.initialLoRaTP = (2dBm + 3dBm*intuniform(0, 4))  #3dBm
**.loRaNodes[*].LoRaNic.mac.maxQueueSize = 1    
**.loRaNodes[*].**.confirmedTx = false #  use transmission with ACK?
#**.loRaNodes[*].**scanningSF = false

# deployment of nodes in a circle with radius=maxGatewayDistance and gateway at gatewayX,gatewayY
#**.loRaNodes[*].deploymentType = "circle"
#**.loRaNodes[*].maxGatewayDistance = 120.0
#**.loRaNodes[*].gatewayX = 240
#**.loRaNodes[*].gatewayY = 240

# predetermined/random deployment of nodes in a square square area
**.loRaNodes[*].**.initialX = uniform(0m, 480m)  #220m
**.loRaNodes[*].**.initialY = uniform(0m, 480m)  #220m

#gateway features
**.LoRaGWNic.radio.iAmGateway = true
**.loRaGW[*].**.initFromDisplayString = false
**.loRaGW[0].**.initialX = 240m   #uniform(0m, 50m)
**.loRaGW[0].**.initialY = 240m

#power consumption features
**.loRaNodes[*].LoRaNic.radio.energyConsumerType = "LoRaEnergyConsumer"
**.loRaNodes[*].**.energySourceModule = "IdealEpEnergyStorage"
**.loRaNodes[*].LoRaNic.radio.energyConsumer.configFile = xmldoc("energyConsumptionParameters.xml")

#general features
**.sigma = 0
**.constraintAreaMinX = 0m
**.constraintAreaMinY = 0m
**.constraintAreaMinZ = 0m
**.constraintAreaMaxX = 480m
**.constraintAreaMaxY = 480m
**.constraintAreaMaxZ = 0m

LoRaNetAnalysis.**.radio.separateTransmissionParts = false
LoRaNetAnalysis.**.radio.separateReceptionParts = false

**.delayer.config = xmldoc("cloudDelays.xml")
**.radio.radioMediumModule = "LoRaMedium"
**.LoRaMedium.pathLossType = "LoRaLogNormalShadowing"
**.minInterferenceTime = 0s
**.displayAddresses = false


[Config S1]
description = "ADR basic avg"
record-eventlog = false

**.numberOfNodes = 50
sim-time-limit = 7d
warmup-period = 1d

**.loRaNodes[*].**.evaluateADRinNode = true
**.networkServer.**.evaluateADRinServer = true

[Config S24base]
description = "Large amount of nodes and long simulation. Variable traffic load. Configuration base "
record-eventlog = false
repeat = 10

#  deployment of nodes in a square square area
**.loRaNodes[*].**.initialY = uniform( 240m-71m, 240m+71m)
**.loRaNodes[*].**.initialX = uniform( 240m-71m, 240m+71m)

**.loRaNodes[*].**.initialLoRaTP = 14dBm
**.loRaNodes[*].**.initialLoRaSF = 7

sim-time-limit = 40d 
warmup-period = 0d  


[Config S24c]
description = "Based on S24base. Same as S24 config but with 20 repetitions, and diferent load distribution. Some nodes with ACK tx"
extends = S24base
repeat = 20

**.numberOfNodes = ${N=100}   
**.numOfConNodes = ${NC=80}
## --- confirmedTX true for loRaNodes[0..NC-1], false for loRaNodes[NC..]
**.loRaNodes[*].**.confirmedTx = ( ancestorIndex(1) < ${NC} )

**.timeToNextPacket = exponential( ${L=400}s )
**.timeToFirstPacket = exponential( ${L}s  )

measurement-label = "N${N}-NC${NC}-TTNP${L}"

[Config S24m]
description = "Study for several SF modes, and selected parameter values. Final values for paper. Based in S24base"
extends = S24base
repeat = 10

sim-time-limit = 86d

**.numberOfNodes = ${N=100}
**.numOfConNodes = ${NC=80}
## --- confirmedTX true for loRaNodes[0..NC-1], false for loRaNodes[NC..]
**.loRaNodes[*].**.confirmedTx = ( ancestorIndex(1) < ${NC} )

**.timeToNextPacket = exponential( ${L=400}s )
**.timeToFirstPacket = exponential( ${L}s  )

**.loRaNodes[*].**.sfModePar = ${SFM="SFM0","SFM1","SFM2","SFM3"}

measurement-label = "${SFM}-N${N}-NC${NC}-TTNP${L}"


measurement-label = "N${N}-NC${NC}-TTNP${L}"
